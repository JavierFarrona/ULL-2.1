$date
	Tue Oct  1 15:07:24 2024
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module sum4_tb $end
$var wire 1 ! test_C_out $end
$var wire 1 " test_c_out $end
$var wire 4 # test_S [3:0] $end
$var reg 4 $ test_A [3:0] $end
$var reg 4 % test_B [3:0] $end
$var reg 1 & test_c_in $end
$scope module sum $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 4 ) S [3:0] $end
$var wire 1 & c_in $end
$var wire 4 * sum1 [3:0] $end
$var wire 1 " c_out $end
$var wire 1 + c3 $end
$var wire 1 , c2 $end
$var wire 1 - c1 $end
$scope module fa1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 & c_in $end
$var wire 1 - c_out $end
$var wire 1 0 sum $end
$var wire 1 1 sum2 $end
$var wire 1 2 sum1 $end
$var wire 1 3 c2 $end
$var wire 1 4 c1 $end
$scope module ha1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 4 carry $end
$var wire 1 2 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 2 a $end
$var wire 1 & b $end
$var wire 1 3 carry $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 - c_in $end
$var wire 1 , c_out $end
$var wire 1 7 sum $end
$var wire 1 8 sum2 $end
$var wire 1 9 sum1 $end
$var wire 1 : c2 $end
$var wire 1 ; c1 $end
$scope module ha1 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ; carry $end
$var wire 1 9 sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 9 a $end
$var wire 1 - b $end
$var wire 1 : carry $end
$var wire 1 8 sum $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 , c_in $end
$var wire 1 + c_out $end
$var wire 1 > sum $end
$var wire 1 ? sum2 $end
$var wire 1 @ sum1 $end
$var wire 1 A c2 $end
$var wire 1 B c1 $end
$scope module ha1 $end
$var wire 1 < a $end
$var wire 1 = b $end
$var wire 1 B carry $end
$var wire 1 @ sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 @ a $end
$var wire 1 , b $end
$var wire 1 A carry $end
$var wire 1 ? sum $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 + c_in $end
$var wire 1 " c_out $end
$var wire 1 E sum $end
$var wire 1 F sum2 $end
$var wire 1 G sum1 $end
$var wire 1 H c2 $end
$var wire 1 I c1 $end
$scope module ha1 $end
$var wire 1 C a $end
$var wire 1 D b $end
$var wire 1 I carry $end
$var wire 1 G sum $end
$upscope $end
$scope module ha2 $end
$var wire 1 G a $end
$var wire 1 + b $end
$var wire 1 H carry $end
$var wire 1 F sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xI
xH
xG
xF
xE
0D
0C
xB
xA
x@
x?
x>
0=
0<
x;
x:
x9
x8
x7
06
05
x4
x3
x2
x1
x0
0/
0.
x-
x,
x+
bx *
bx )
b0 (
b0 '
1&
b0 %
b0 $
bx #
x"
z!
$end
#100
02
04
09
0;
0@
0B
0G
0I
#200
0-
0,
0+
0"
bx1 #
bx1 )
bx1 *
10
11
03
0:
0A
0H
#300
07
08
0>
0?
b1 #
b1 )
b1 *
0E
0F
#2000
1/
1.
15
1<
1C
b1 %
b1 (
b1111 $
b1111 '
0&
#2100
1-
14
19
1@
1G
b0 #
b0 )
b0 *
00
01
#2200
1,
1:
1>
1?
b1100 #
b1100 )
b1100 *
1E
1F
#2300
1+
b1000 #
b1000 )
b1000 *
0>
0?
1A
#2400
1"
b0 #
b0 )
b0 *
0E
0F
1H
#4000
16
1=
1D
b1111 %
b1111 (
1&
#4100
09
1;
0@
1B
0G
1I
b1 #
b1 )
b1 *
10
11
#4200
17
18
0:
1>
1?
0A
b1111 #
b1111 )
b1111 *
1E
1F
0H
#6000
0.
05
0<
0C
b0 $
b0 '
#6100
0-
0,
0+
0"
12
04
19
0;
1@
0B
1G
0I
#6200
1-
b1110 #
b1110 )
b1110 *
00
01
13
#6300
1,
b1100 #
b1100 )
b1100 *
07
08
1:
#6400
1+
b1000 #
b1000 )
b1000 *
0>
0?
1A
#6500
1"
b0 #
b0 )
b0 *
0E
0F
1H
#8000
0/
0=
1.
1<
b1010 %
b1010 (
b101 $
b101 '
0&
#8100
0-
b1 #
b1 )
b1 *
10
11
03
#8200
0,
b11 #
b11 )
b11 *
17
18
0:
#8300
0+
b111 #
b111 )
b111 *
1>
1?
0A
#8400
0"
b1111 #
b1111 )
b1111 *
1E
1F
0H
#10000
